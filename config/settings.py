"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#)+lm294g(tv#z+-%5&=-v1#wowfwr+!t)j^yin4=tj9qt4_fn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


# Application definition

LOCAL_APPS = [
    'backend.menu',
    'backend.cart',
    'backend.feedback',
    'backend.booking',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    # 'rest_framework.authtoken',
    # 'djoser',
    'django_probes',
    'django_extensions',
    'drf_spectacular',
    'corsheaders',
] + LOCAL_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
env = environ.Env()
env.read_env(".envs/.postgres")

POSTGRES_USER = env("POSTGRES_USER")
POSTGRES_PASSWORD = env("POSTGRES_PASSWORD")
POSTGRES_HOST = env("POSTGRES_HOST")
POSTGRES_PORT = env("POSTGRES_PORT")
POSTGRES_DB = env("POSTGRES_DB")
DATABASE_URL=f"postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"  # noqa

DATABASE_DEFAULT = dict(
    ENGINE='django.db.backends.postgresql',
    USER=POSTGRES_USER,
    PASSWORD=POSTGRES_PASSWORD,
    HOST=POSTGRES_HOST,
    PORT=POSTGRES_PORT,
    NAME=POSTGRES_DB,
    DATABASE_URL=DATABASE_URL,
)

DATABASES = {"default": DATABASE_DEFAULT}
DATABASES["default"]["ATOMIC_REQUESTS"] = True


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Krasnoyarsk'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = 'backend/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_RENDER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer'
    ],

    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Project O',
    'DESCRIPTION': 'Swagger specification for `PROJECT O`',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

# DEV TOOLS
# -----------------------------------------------------------------------------

SHELL_PLUS = 'ipython'

# loading of factories in shell_plus
SHELL_PLUS_PRE_IMPORTS = [
    f'from {app}.factories import *' for app in LOCAL_APPS
]

# CORS SETTINGS
# -----------------------------------------------------------------------------
# django-cors-headers - https://github.com/adamchainz/django-cors-headers#setup
CORS_URLS_REGEX = r'^/.*$'

# SECURE_CROSS_ORIGIN_OPENER_POLICY = None
# CORS_ALLOWED_ORIGINS = ['http://localhost:3030',]
CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOW_CREDENTIALS = False
# CORS_ORIGIN_WHITELIST = ["http://localhost:3000"]
# ALLOWED_HOSTS = ["*"]
# CORS_ALLOW_HEADERS = (
#     "content-disposition",
#     "accept-encoding",
#     "content-type",
#     "accept",
#     "origin",
#     "authorization",
#     "access-control-allow-methods",
# )

# https://docs.djangoproject.com/en/dev/ref/settings/#test-runner
TEST_RUNNER = "utils.manage.pytest_runner.PytestTestRunner"
